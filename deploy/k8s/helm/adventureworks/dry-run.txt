NAME: dev
LAST DEPLOYED: Wed Oct 26 07:28:15 2022
NAMESPACE: adventureworks
STATUS: pending-install
REVISION: 1
TEST SUITE: None
HOOKS:
MANIFEST:
---
# Source: adventureworks/charts/redis/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: dev-redis
  namespace: "adventureworks"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-15.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
---
# Source: adventureworks/charts/basket-api/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "dev-basket-api-secrets"
data:
  RedisPassword: "U3lGdTJTWDVtdw=="
  EventBusUserName: "Z3Vlc3Q="
  EventBusPassword: "Z3Vlc3Q="
---
# Source: adventureworks/charts/customer-api/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "dev-customer-api-secrets"
data:
  ConnectionStrings__DbConnection: "U2VydmVyPW5nLXNxbGRiLWFkdmVudHVyZXdvcmtzLmRhdGFiYXNlLndpbmRvd3MubmV0O0RhdGFiYXNlPXNxbGRiLWFkdi1jdXN0b21lcjtVc2VyIElkPXNxbHVzZXI7UGFzc3dvcmQ9V2Vsa29tMDE="
---
# Source: adventureworks/charts/employee-api/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "dev-employee-api-secrets"
data:
  ConnectionStrings__DbConnection: "U2VydmVyPW5nLXNxbGRiLWFkdmVudHVyZXdvcmtzLmRhdGFiYXNlLndpbmRvd3MubmV0O0RhdGFiYXNlPXNxbGRiLWFkdi1ocjtVc2VyIElkPXNxbHVzZXI7UGFzc3dvcmQ9V2Vsa29tMDE="
---
# Source: adventureworks/charts/identityserver/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "dev-identityserver-secrets"
data:
  ConnectionStrings__DbConnection: "U2VydmVyPW5nLXNxbGRiLWFkdmVudHVyZXdvcmtzLmRhdGFiYXNlLndpbmRvd3MubmV0O0RhdGFiYXNlPXNxbGRiLWFkdi1pZGVudGl0eXNlcnZlcjtVc2VyIElkPXNxbHVzZXI7UGFzc3dvcmQ9V2Vsa29tMDE="
---
# Source: adventureworks/charts/product-api/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "dev-product-api-secrets"
data:
  ConnectionStrings__DbConnection: "U2VydmVyPW5nLXNxbGRiLWFkdmVudHVyZXdvcmtzLmRhdGFiYXNlLndpbmRvd3MubmV0O0RhdGFiYXNlPXNxbGRiLWFkdi1wcm9kdWN0O1VzZXIgSWQ9c3FsdXNlcjtQYXNzd29yZD1XZWxrb20wMQ=="
---
# Source: adventureworks/charts/redis/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dev-redis
  namespace: "adventureworks"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-15.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  redis-password: "U3lGdTJTWDVtdw=="
---
# Source: adventureworks/charts/referencedata-api/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "dev-referencedata-api-secrets"
data:
  ConnectionStrings__DbConnection: "U2VydmVyPW5nLXNxbGRiLWFkdmVudHVyZXdvcmtzLmRhdGFiYXNlLndpbmRvd3MubmV0O0RhdGFiYXNlPXNxbGRiLWFkdi1yZWZlcmVuY2VkYXRhO1VzZXIgSWQ9c3FsdXNlcjtQYXNzd29yZD1XZWxrb20wMQ=="
---
# Source: adventureworks/charts/salesorder-api/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "dev-salesorder-api-secrets"
data:
  ConnectionStrings__DbConnection: "U2VydmVyPW5nLXNxbGRiLWFkdmVudHVyZXdvcmtzLmRhdGFiYXNlLndpbmRvd3MubmV0O0RhdGFiYXNlPXNxbGRiLWFkdi1zYWxlcztVc2VyIElkPXNxbHVzZXI7UGFzc3dvcmQ9V2Vsa29tMDE="
---
# Source: adventureworks/charts/salesperson-api/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "dev-salesperson-api-secrets"
data:
  ConnectionStrings__DbConnection: "U2VydmVyPW5nLXNxbGRiLWFkdmVudHVyZXdvcmtzLmRhdGFiYXNlLndpbmRvd3MubmV0O0RhdGFiYXNlPXNxbGRiLWFkdi1zYWxlcztVc2VyIElkPXNxbHVzZXI7UGFzc3dvcmQ9V2Vsa29tMDE="
---
# Source: adventureworks/charts/basket-api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "dev-basket-api-config"
  labels:
    app: basket-api
    chart: basket-api-0.1.0
    release: dev
    heritage: Helm
data:
  ASPNETCORE_ENVIRONMENT: "Development"
  AuthN__IdP: AzureAd
  AuthN__Scopes: openid profile api://f6ac0331-25cd-4352-af71-8246c2e9f18c/basket-api.read
  AuthN__OpenIdClientId: 5bf4d615-8920-4b2e-8a0d-cc9e336df67e
  AuthN__AzureAd__Instance: https://login.microsoftonline.com/
  AuthN__AzureAd__Domain: ngrusonhotmail170.onmicrosoft.com
  AuthN__AzureAd__TenantId: 235caa24-0e40-4b1e-b555-2adb08709271
  AuthN__AzureAd__ClientId: f6ac0331-25cd-4352-af71-8246c2e9f18c
  AuthN__IdSrv__Authority: https://dev.adventureworks-vnext.com/identityserver/
  ElasticSearchUri: http://dev-elasticsearch-master:9200
  EventBusConnection: dev-rabbitmq
  RedisConnectionString: dev-redis-master
---
# Source: adventureworks/charts/customer-api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "dev-customer-api-config"
  labels:
    app: customer-api
    chart: customer-api-0.1.0
    release: dev
    heritage: Helm
data:
  ASPNETCORE_ENVIRONMENT: "Development"
  AuthN__IdP: AzureAd
  AuthN__Scopes: openid profile api://9c26f14d-021f-41e4-abcc-fc655cc305a6/customer-api.read
  AuthN__OpenIdClientId: 5bf4d615-8920-4b2e-8a0d-cc9e336df67e
  AuthN__AzureAd__Instance: https://login.microsoftonline.com/
  AuthN__AzureAd__Domain: ngrusonhotmail170.onmicrosoft.com
  AuthN__AzureAd__TenantId: 235caa24-0e40-4b1e-b555-2adb08709271
  AuthN__AzureAd__ClientId: 9c26f14d-021f-41e4-abcc-fc655cc305a6
  AuthN__IdSrv__Authority: https://dev.adventureworks-vnext.com/identityserver/
  ElasticSearchUri: http://dev-elasticsearch-master:9200
---
# Source: adventureworks/charts/employee-api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "dev-employee-api-config"
  labels:
    app: employee-api
    chart: employee-api-0.1.0
    release: dev
    heritage: Helm
data:
  ASPNETCORE_ENVIRONMENT: "Development"
  AuthN__IdP: AzureAd
  AuthN__Scopes: openid profile api://4dd9b78e-6bbb-4d06-a082-addb6512d984/employee-api.read
  AuthN__OpenIdClientId: 5bf4d615-8920-4b2e-8a0d-cc9e336df67e
  AuthN__AzureAd__Instance: https://login.microsoftonline.com/
  AuthN__AzureAd__Domain: ngrusonhotmail170.onmicrosoft.com
  AuthN__AzureAd__TenantId: 235caa24-0e40-4b1e-b555-2adb08709271
  AuthN__AzureAd__ClientId: 4dd9b78e-6bbb-4d06-a082-addb6512d984
  AuthN__IdSrv__Authority: https://dev.adventureworks-vnext.com/identityserver/
  ElasticSearchUri: http://dev-elasticsearch-master:9200
---
# Source: adventureworks/charts/identityserver/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "dev-identityserver-config"
  labels:
    app: identityserver
    chart: identityserver-0.1.0
    release: dev
    heritage: Helm
data:
  ASPNETCORE_ENVIRONMENT: "Development"
  ElasticSearchUri: http://dev-elasticsearch-master:9200
---
# Source: adventureworks/charts/mvc-store/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "dev-mvc-store-config"
  labels:
    app: mvc-store
    chart: mvc-store-0.1.0
    release: dev
    heritage: Helm
data:
  ASPNETCORE_ENVIRONMENT: "Development"
  AuthN__Authority: https://
  AuthN__ClientId: store
  AuthN__ClientSecret: secret
  ElasticSearchUri: http://localhost:8080
  BasketAPI__Uri: http://localhost:8080/basket-api/
  CustomerAPI__Uri: http://localhost:8080/customer-api/
  ProductAPI__Uri: http://localhost:8080/product-api/
  ReferenceDataAPI__Uri: http://localhost:8080/referencedata-api/
  envoy-config: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 8080
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: http1
              stat_prefix: forward_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: backend
                  domains:
                  - "*"
                  routes:                  
                  - match:
                      prefix: "/basket-api"
                    route:
                      cluster: basket-api
                  - match:
                      prefix: "/customer-api"
                    route:
                      cluster: customer-api
                  - match:
                      prefix: "/product-api"
                    route:
                      cluster: product-api
                  - match:
                      prefix: "/referencedata-api"
                    route:
                      cluster: referencedata-api
                  - match:
                      prefix: "/"
                    route:
                      cluster: elasticsearch
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
        - name: basket-api
          type: strict_dns
          load_assignment:
            cluster_name: basket-api
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: dev-basket-api
                        port_value: 80
        - name: customer-api
          type: strict_dns
          load_assignment:
            cluster_name: customer-api
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: dev-customer-api
                        port_value: 80
        - name: elasticsearch
          type: strict_dns
          load_assignment:
            cluster_name: elasticsearch
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: dev-elasticsearch-master
                        port_value: 9200
        - name: product-api
          type: strict_dns
          load_assignment:
            cluster_name: product-api
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: dev-product-api
                        port_value: 80
        - name: referencedata-api
          type: strict_dns
          load_assignment:
            cluster_name: referencedata-api
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: dev-referencedata-api
                        port_value: 80

    layered_runtime:
      layers:
      - name: static_layer_0
        static_layer:
          envoy:
            resource_limits:
              listener:
                example_listener_name:
                  connection_limit: 10000
          overload:
            global_downstream_max_connections: 50000
---
# Source: adventureworks/charts/product-api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "dev-product-api-config"
  labels:
    app: product-api
    chart: product-api-0.1.0
    release: dev
    heritage: Helm
data:
  ASPNETCORE_ENVIRONMENT: "Development"
  AuthN__IdP: AzureAd
  AuthN__Scopes: openid profile api://a5cfd206-a59e-4e2e-9356-fe4764340e15/product-api.read
  AuthN__OpenIdClientId: 5bf4d615-8920-4b2e-8a0d-cc9e336df67e
  AuthN__AzureAd__Instance: https://login.microsoftonline.com/
  AuthN__AzureAd__Domain: ngrusonhotmail170.onmicrosoft.com
  AuthN__AzureAd__TenantId: 235caa24-0e40-4b1e-b555-2adb08709271
  AuthN__AzureAd__ClientId: a5cfd206-a59e-4e2e-9356-fe4764340e15
  AuthN__IdSrv__Authority: https://dev.adventureworks-vnext.com/identityserver/
  ElasticSearchUri: http://dev-elasticsearch-master:9200
---
# Source: adventureworks/charts/redis/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-redis-configuration
  namespace: "adventureworks"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-15.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
data:
  redis.conf: |-
    # User-supplied common configuration:
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
    # End of common configuration
  master.conf: |-
    dir /data
    # User-supplied master configuration:
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    # End of master configuration
  replica.conf: |-
    dir /data
    slave-read-only yes
    # User-supplied replica configuration:
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    # End of replica configuration
---
# Source: adventureworks/charts/redis/templates/health-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-redis-health
  namespace: "adventureworks"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-15.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
data:
  ping_readiness_local.sh: |-
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -n "$REDIS_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_local.sh: |-
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -n "$REDIS_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$response" != "PONG" ] && [ "$response" != "LOADING Redis is loading the dataset in memory" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_master.sh: |-
    #!/bin/bash

    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    [[ -n "$REDIS_MASTER_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_master.sh: |-
    #!/bin/bash

    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    [[ -n "$REDIS_MASTER_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$response" != "PONG" ] && [ "$response" != "LOADING Redis is loading the dataset in memory" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_readiness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_readiness_master.sh" $1 || exit_status=$?
    exit $exit_status
  ping_liveness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_liveness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_liveness_master.sh" $1 || exit_status=$?
    exit $exit_status
---
# Source: adventureworks/charts/redis/templates/scripts-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-redis-scripts
  namespace: "adventureworks"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-15.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
data:
  start-master.sh: |
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    if [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
    fi
    if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
    fi
    ARGS=("--port" "${REDIS_PORT}")
    ARGS+=("--requirepass" "${REDIS_PASSWORD}")
    ARGS+=("--masterauth" "${REDIS_PASSWORD}")
    ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
    ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
    exec redis-server "${ARGS[@]}"
  start-replica.sh: |
    #!/bin/bash

    get_port() {
        hostname="$1"
        type="$2"

        port_var=$(echo "${hostname^^}_SERVICE_PORT_$type" | sed "s/-/_/g")
        port=${!port_var}
        
        if [ -z "$port" ]; then
            case $type in
                "SENTINEL")
                    echo 26379
                    ;;
                "REDIS")
                    echo 6379
                    ;;
            esac
        else
            echo $port
        fi
    }

    get_full_hostname() {
        hostname="$1"
        echo "${hostname}.${HEADLESS_SERVICE}"
    }

    REDISPORT=$(get_port "$HOSTNAME" "REDIS")
    
    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    if [[ ! -f /opt/bitnami/redis/etc/replica.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/replica.conf /opt/bitnami/redis/etc/replica.conf
    fi
    if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
    fi

    echo "" >> /opt/bitnami/redis/etc/replica.conf
    echo "replica-announce-port $REDISPORT" >> /opt/bitnami/redis/etc/replica.conf
    echo "replica-announce-ip $(get_full_hostname "$HOSTNAME")" >> /opt/bitnami/redis/etc/replica.conf
    ARGS=("--port" "${REDIS_PORT}")
    ARGS+=("--slaveof" "${REDIS_MASTER_HOST}" "${REDIS_MASTER_PORT_NUMBER}")
    ARGS+=("--requirepass" "${REDIS_PASSWORD}")
    ARGS+=("--masterauth" "${REDIS_MASTER_PASSWORD}")
    ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
    ARGS+=("--include" "/opt/bitnami/redis/etc/replica.conf")
    exec redis-server "${ARGS[@]}"
---
# Source: adventureworks/charts/referencedata-api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "dev-referencedata-api-config"
  labels:
    app: referencedata-api
    chart: referencedata-api-0.1.0
    release: dev
    heritage: Helm
data:
  ASPNETCORE_ENVIRONMENT: "Development"
  AuthN__IdP: AzureAd
  AuthN__Scopes: openid profile api://7703965c-190e-48b2-aec5-3b7d348fb1f2/referencedata-api.read
  AuthN__OpenIdClientId: 5bf4d615-8920-4b2e-8a0d-cc9e336df67e
  AuthN__AzureAd__Instance: https://login.microsoftonline.com/
  AuthN__AzureAd__Domain: ngrusonhotmail170.onmicrosoft.com
  AuthN__AzureAd__TenantId: 235caa24-0e40-4b1e-b555-2adb08709271
  AuthN__AzureAd__ClientId: 7703965c-190e-48b2-aec5-3b7d348fb1f2
  AuthN__IdSrv__Authority: https://dev.adventureworks-vnext.com/identityserver/
  ElasticSearchUri: http://dev-elasticsearch-master:9200
---
# Source: adventureworks/charts/salesorder-api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "dev-salesorder-api-config"
  labels:
    app: salesorder-api
    chart: salesorder-api-0.1.0
    release: dev
    heritage: Helm
data:
  ASPNETCORE_ENVIRONMENT: "Development"
  AuthN__IdP: AzureAd
  AuthN__Scopes: openid profile api://bef051e3-ec15-4f61-80f8-a8d17734a735/salesorder-api.read
  AuthN__OpenIdClientId: 5bf4d615-8920-4b2e-8a0d-cc9e336df67e
  AuthN__AzureAd__Instance: https://login.microsoftonline.com/
  AuthN__AzureAd__Domain: ngrusonhotmail170.onmicrosoft.com
  AuthN__AzureAd__TenantId: 235caa24-0e40-4b1e-b555-2adb08709271
  AuthN__AzureAd__ClientId: bef051e3-ec15-4f61-80f8-a8d17734a735
  AuthN__IdSrv__Authority: https://dev.adventureworks-vnext.com/identityserver/
  ElasticSearchUri: http://dev-elasticsearch-master:9200
  EventBusConnection: dev-rabbitmq
---
# Source: adventureworks/charts/salesperson-api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "dev-salesperson-api-config"
  labels:
    app: salesperson-api
    chart: salesperson-api-0.1.0
    release: dev
    heritage: Helm
data:
  ASPNETCORE_ENVIRONMENT: "Development"
  AuthN__IdP: AzureAd
  AuthN__Scopes: openid profile api://b39e63d8-79d0-4170-88b8-280680031e30/salesperson-api.read
  AuthN__OpenIdClientId: 5bf4d615-8920-4b2e-8a0d-cc9e336df67e
  AuthN__AzureAd__Instance: https://login.microsoftonline.com/
  AuthN__AzureAd__Domain: ngrusonhotmail170.onmicrosoft.com
  AuthN__AzureAd__TenantId: 235caa24-0e40-4b1e-b555-2adb08709271
  AuthN__AzureAd__ClientId: b39e63d8-79d0-4170-88b8-280680031e30
  AuthN__IdSrv__Authority: https://dev.adventureworks-vnext.com/identityserver/
  ElasticSearchUri: http://dev-elasticsearch-master:9200
---
# Source: adventureworks/charts/ui-web-admin-mvc/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "dev-ui-web-admin-mvc-config"
  labels:
    app: ui-web-admin-mvc
    chart: ui-web-admin-mvc-0.1.0
    release: dev
    heritage: Helm
data:
  ASPNETCORE_ENVIRONMENT: "Development"
  AuthN__IdP: AzureAd
  AuthN__Scopes: openid profile email offline_access
  AuthN__ApiScopes__CustomerApiRead: api://9c26f14d-021f-41e4-abcc-fc655cc305a6/customer-api.read
  AuthN__ApiScopes__ReferenceDataApiRead: api://7703965c-190e-48b2-aec5-3b7d348fb1f2/referencedata-api.read
  AuthN__ApiScopes__SalesOrderApiRead: api://bef051e3-ec15-4f61-80f8-a8d17734a735/salesorder-api.read
  AuthN__ApiScopes__SalesPersonApiRead: api://b39e63d8-79d0-4170-88b8-280680031e30/salesperson-api.read
  AuthN__AzureAd__Instance: https://login.microsoftonline.com/
  AuthN__AzureAd__Domain: ngrusonhotmail170.onmicrosoft.com
  AuthN__AzureAd__TenantId: 235caa24-0e40-4b1e-b555-2adb08709271
  AuthN__AzureAd__ClientId: d11696bb-9742-4415-a51f-81225d803bc7
  AuthN__AzureAd__ClientSecret: jat8Q~VoyKZ8EeUk8y_4Nq8GJhz7Lj-2LQo0Mad0
  AuthN__AzureAd__CallbackPath: /signin-oidc
  AuthN__AzureAd__SignedOutCallbackPath: /signout-callback-oidc
  AuthN__IdSrv__Authority: https://
  AuthN__IdSrv__ClientId: internal
  AuthN__IdSrv__ClientSecret: secret
  ElasticSearchUri: http://localhost:8080
  CustomerAPI__Uri: http://localhost:8080/customer-api/
  ReferenceDataAPI__Uri: http://localhost:8080/referencedata-api/
  SalesOrderAPI__Uri: http://localhost:8080/salesorder-api/
  SalesPersonAPI__Uri: http://localhost:8080/salesperson-api/
  envoy-config: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 8080
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: http1
              stat_prefix: forward_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: backend
                  domains:
                  - "*"
                  routes:                  
                  - match:
                      prefix: "/customer-api"
                    route:
                      cluster: customer-api
                  - match:
                      prefix: "/referencedata-api"
                    route:
                      cluster: referencedata-api
                  - match:
                      prefix: "/salesorder-api"
                    route:
                      cluster: salesorder-api
                  - match:
                      prefix: "/salesperson-api"
                    route:
                      cluster: salesperson-api
                  - match:
                      prefix: "/"
                    route:
                      cluster: elasticsearch
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
        - name: customer-api
          type: strict_dns
          load_assignment:
            cluster_name: customer-api
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: dev-customer-api
                        port_value: 80
        - name: elasticsearch
          type: strict_dns
          load_assignment:
            cluster_name: elasticsearch
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: dev-elasticsearch-master
                        port_value: 9200
        - name: referencedata-api
          type: strict_dns
          load_assignment:
            cluster_name: referencedata-api
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: dev-referencedata-api
                        port_value: 80
        - name: salesorder-api
          type: strict_dns
          load_assignment:
            cluster_name: salesorder-api
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: dev-salesorder-api
                        port_value: 80
        - name: salesperson-api
          type: strict_dns
          load_assignment:
            cluster_name: salesperson-api
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: dev-salesperson-api
                        port_value: 80

    layered_runtime:
      layers:
      - name: static_layer_0
        static_layer:
          envoy:
            resource_limits:
              listener:
                example_listener_name:
                  connection_limit: 10000
          overload:
            global_downstream_max_connections: 50000
---
# Source: adventureworks/charts/basket-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-basket-api
  labels:
    app: basket-api
    chart: basket-api-0.1.0
    release: dev
    heritage: Helm
spec:
  type: ClusterIP
  selector:
    app: basket-api
    release: dev
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
---
# Source: adventureworks/charts/customer-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-customer-api
  labels:
    app: customer-api
    chart: customer-api-0.1.0
    release: dev
    heritage: Helm
spec:
  type: ClusterIP
  selector:
    app: customer-api
    release: dev
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
---
# Source: adventureworks/charts/elasticsearch/templates/coordinating-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-elasticsearch-coordinating-only
  labels:
    app.kubernetes.io/name: elasticsearch
    helm.sh/chart: elasticsearch-17.9.3
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: coordinating-only
  annotations: 
    {}
spec:
  type: "ClusterIP"
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 9200
      targetPort: http
      nodePort: null
    - name: tcp-transport
      port: 9300
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: coordinating-only
---
# Source: adventureworks/charts/elasticsearch/templates/data-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-elasticsearch-data
  labels:
    app.kubernetes.io/name: elasticsearch
    helm.sh/chart: elasticsearch-17.9.3
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: data
  annotations: 
    {}
spec:
  type: ClusterIP
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 9200
      targetPort: http
    - name: tcp-transport
      port: 9300
      targetPort: transport
      nodePort: null
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: data
---
# Source: adventureworks/charts/elasticsearch/templates/master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-elasticsearch-master
  labels:
    app.kubernetes.io/name: elasticsearch
    helm.sh/chart: elasticsearch-17.9.3
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
  annotations: 
    {}
spec:
  type: "ClusterIP"
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 9200
      targetPort: http
    - name: tcp-transport
      port: 9300
      targetPort: transport
      nodePort: null
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: master
---
# Source: adventureworks/charts/employee-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-employee-api
  labels:
    app: employee-api
    chart: employee-api-0.1.0
    release: dev
    heritage: Helm
spec:
  type: ClusterIP
  selector:
    app: employee-api
    release: dev
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
---
# Source: adventureworks/charts/identityserver/templates/service.yml
apiVersion: v1
kind: Service
metadata:
  name: dev-identityserver
  labels:
    app: identityserver
    chart: identityserver-0.1.0
    release: dev
    heritage: Helm
spec:
  type: ClusterIP
  selector:
    app: identityserver
    release: dev
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
---
# Source: adventureworks/charts/kibana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-kibana
  labels: 
    app: kibana
    release: "dev"
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5601
      protocol: TCP
      name: http
      targetPort: 5601
  selector:
    app: kibana
    release: "dev"
---
# Source: adventureworks/charts/mvc-store/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-mvc-store
  labels:
    app: mvc-store
    chart: mvc-store-0.1.0
    release: dev
    heritage: Helm
spec:
  type: ClusterIP
  selector:
    app: mvc-store
    release: dev
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
---
# Source: adventureworks/charts/product-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-product-api
  labels:
    app: product-api
    chart: product-api-0.1.0
    release: dev
    heritage: Helm
spec:
  type: ClusterIP
  selector:
    app: product-api
    release: dev
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
---
# Source: adventureworks/charts/rabbitmq/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-rabbitmq
  labels:
    app: rabbitmq
    chart: rabbitmq-0.1.0
    release: dev
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5672
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: rabbitmq
    release: dev
---
# Source: adventureworks/charts/redis/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-redis-headless
  namespace: "adventureworks"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-15.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-redis
      port: 6379
      targetPort: redis
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: dev
---
# Source: adventureworks/charts/redis/templates/master/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-redis-master
  namespace: "adventureworks"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-15.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
spec:
  type: ClusterIP
  
  ports:
    - name: tcp-redis
      port: 6379
      targetPort: redis
      nodePort: null
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: master
---
# Source: adventureworks/charts/redis/templates/replicas/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-redis-replicas
  namespace: "adventureworks"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-15.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: replica
spec:
  type: ClusterIP
  ports:
    - name: tcp-redis
      port: 6379
      targetPort: redis
      nodePort: null
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: replica
---
# Source: adventureworks/charts/referencedata-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-referencedata-api
  labels:
    app: referencedata-api
    chart: referencedata-api-0.1.0
    release: dev
    heritage: Helm
spec:
  type: ClusterIP
  selector:
    app: referencedata-api
    release: dev
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
---
# Source: adventureworks/charts/salesorder-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-salesorder-api
  labels:
    app: salesorder-api
    chart: salesorder-api-0.1.0
    release: dev
    heritage: Helm
spec:
  type: ClusterIP
  selector:
    app: salesorder-api
    release: dev
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
---
# Source: adventureworks/charts/salesperson-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-salesperson-api
  labels:
    app: salesperson-api
    chart: salesperson-api-0.1.0
    release: dev
    heritage: Helm
spec:
  type: ClusterIP
  selector:
    app: salesperson-api
    release: dev
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
---
# Source: adventureworks/charts/ui-web-admin-mvc/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-ui-web-admin-mvc
  labels:
    app: ui-web-admin-mvc
    chart: ui-web-admin-mvc-0.1.0
    release: dev
    heritage: Helm
spec:
  type: ClusterIP
  selector:
    app: ui-web-admin-mvc
    release: dev
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
---
# Source: adventureworks/charts/basket-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-basket-api
  labels:
    ufo: dev-basket-api-config
    app: basket-api
    chart: basket-api-0.1.0
    release: dev
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: basket-api
      release: dev
  replicas: 1
  template:
    metadata:
      labels:
        app: basket-api
        release: dev
    spec:
      containers:
      - name: basket-api
        livenessProbe:
          httpGet: 
            port: 80
            path: /basket-api/liveness
          initialDelaySeconds: 60
          periodSeconds: 15
        readinessProbe:
          httpGet:
            port: 80
            path: /basket-api/hc
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        image: "cradventureworks.azurecr.io/adventureworks_basketapi:latest"
        imagePullPolicy: Always
        envFrom:
          - configMapRef: 
              name: dev-basket-api-config
          - secretRef:
              name: dev-basket-api-secrets
        env:
         - name: RedisPassword
           valueFrom:
             secretKeyRef:
               name: dev-redis
               key: redis-password
        resources:
          limits:
            memory: "128Mi"
            cpu: "50m"
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
---
# Source: adventureworks/charts/customer-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-customer-api
  labels:
    ufo: dev-customer-api-config
    app: customer-api
    chart: customer-api-0.1.0
    release: dev
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: customer-api
      release: dev
  replicas: 1
  template:
    metadata:
      labels:
        app: customer-api
        release: dev
    spec:
      containers:
      - name: customer-api
        livenessProbe:
          httpGet: 
            port: 80
            path: /customer-api/liveness
          initialDelaySeconds: 60
          periodSeconds: 15
        readinessProbe:
          httpGet:
            port: 80
            path: /customer-api/hc
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        image: "cradventureworks.azurecr.io/adventureworks_customerapi:latest"
        imagePullPolicy: Always
        envFrom:
          - configMapRef: 
              name: dev-customer-api-config
          - secretRef:
              name: dev-customer-api-secrets
        resources:
          limits:
            memory: "128Mi"
            cpu: "50m"
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
---
# Source: adventureworks/charts/employee-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-employee-api
  labels:
    ufo: dev-employee-api-config
    app: employee-api
    chart: employee-api-0.1.0
    release: dev
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: employee-api
      release: dev
  replicas: 1
  template:
    metadata:
      labels:
        app: employee-api
        release: dev
    spec:
      containers:
      - name: employee-api
        livenessProbe:
          httpGet: 
            port: 80
            path: /employee-api/liveness
          initialDelaySeconds: 60
          periodSeconds: 15
        readinessProbe:
          httpGet:
            port: 80
            path: /employee-api/hc
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        image: "cradventureworks.azurecr.io/adventureworks_employeeapi:latest"
        imagePullPolicy: Always
        envFrom:
          - configMapRef: 
              name: dev-employee-api-config
          - secretRef:
              name: dev-employee-api-secrets
        resources:
          limits:
            memory: "128Mi"
            cpu: "50m"
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
---
# Source: adventureworks/charts/identityserver/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-identityserver
  labels:
    ufo: dev-identityserver-config
    app: identityserver
    chart: identityserver-0.1.0
    release: dev
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: identityserver
      release: dev
  replicas: 1
  template:
    metadata:
      labels:
        app: identityserver
        release: dev
    spec:
      containers:
      - name: identityserver
        livenessProbe:
          httpGet: 
            port: 80
            path: /identityserver/liveness
          initialDelaySeconds: 60
          periodSeconds: 15
        readinessProbe:
          httpGet:
            port: 80
            path: /identityserver/hc
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        image: "cradventureworks.azurecr.io/adventureworks_identityserver:latest"
        imagePullPolicy: Always
        envFrom:
          - configMapRef: 
              name: dev-identityserver-config
          - secretRef:
              name: dev-identityserver-secrets
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
---
# Source: adventureworks/charts/kibana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-kibana
  labels: 
    app: kibana
    release: "dev"
    heritage: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kibana
      release: "dev"
  template:
    metadata:
      labels:
        app: kibana
        release: "dev"
      annotations:
        
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
      containers:
      - name: kibana
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/kibana/kibana:7.9.3"
        imagePullPolicy: "IfNotPresent"
        env:
          - name: ELASTICSEARCH_HOSTS
            value: "http://dev-elasticsearch-master:9200"
          - name: SERVER_HOST
            value: "0.0.0.0"
          - name: NODE_OPTIONS
            value: --max-old-space-size=1800
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
          exec:
            command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Kibana Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                    local path="${1}"
                    set -- -XGET -s --fail -L

                    if [ -n "${ELASTICSEARCH_USERNAME}" ] && [ -n "${ELASTICSEARCH_PASSWORD}" ]; then
                      set -- "$@" -u "${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}"
                    fi

                    STATUS=$(curl --output /dev/null --write-out "%{http_code}" -k "$@" "http://localhost:5601${path}")
                    if [[ "${STATUS}" -eq 200 ]]; then
                      exit 0
                    fi

                    echo "Error: Got HTTP code ${STATUS} but expected a 200"
                    exit 1
                }

                http "/app/kibana"
        ports:
        - containerPort: 5601
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 1Gi
        volumeMounts:
---
# Source: adventureworks/charts/mvc-store/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-mvc-store
  labels:
    ufo: dev-mvc-store-config
    app: mvc-store
    chart: mvc-store-0.1.0
    release: dev
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: mvc-store
      release: dev
  replicas: 1
  template:
    metadata:
      labels:
        app: mvc-store
        release: dev
    spec:
      volumes:
      - name: envoy-config
        configMap:
          name: dev-mvc-store-config
          items:
          - key: envoy-config
            path: envoy.yaml
      containers:
      - name: mvc-store
        livenessProbe:
          httpGet: 
            port: 80
            path: /mvc-store/liveness
          initialDelaySeconds: 60
          periodSeconds: 15
        readinessProbe:
          httpGet:
            port: 80
            path: /mvc-store/hc
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        image: "cradventureworks.azurecr.io/adventureworks_mvc_store:latest"
        imagePullPolicy: Always
        envFrom:
          - configMapRef: 
              name: dev-mvc-store-config
        resources:
          limits:
            memory: "128Mi"
            cpu: "50m"
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
      - name: envoy
        image: envoyproxy/envoy:v1.22-latest
        ports:
          - containerPort: 80
        volumeMounts:
          - name: envoy-config
            mountPath: /etc/envoy
            readOnly: true
---
# Source: adventureworks/charts/product-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-product-api
  labels:
    ufo: dev-product-api-config
    app: product-api
    chart: product-api-0.1.0
    release: dev
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: product-api
      release: dev
  replicas: 1
  template:
    metadata:
      labels:
        app: product-api
        release: dev
    spec:
      containers:
      - name: product-api
        livenessProbe:
          httpGet: 
            port: 80
            path: /product-api/liveness
          initialDelaySeconds: 60
          periodSeconds: 15
        readinessProbe:
          httpGet:
            port: 80
            path: /product-api/hc
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        image: "cradventureworks.azurecr.io/adventureworks_productapi:latest"
        imagePullPolicy: Always
        envFrom:
          - configMapRef: 
              name: dev-product-api-config
          - secretRef:
              name: dev-product-api-secrets
        resources:
          limits:
            memory: "128Mi"
            cpu: "50m"
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
---
# Source: adventureworks/charts/rabbitmq/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-rabbitmq
  labels:
    app: rabbitmq
    chart: rabbitmq-0.1.0
    release: dev
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
      release: dev
  template:
    metadata:
      labels:
        app: rabbitmq
        release: dev
    spec:
      containers:
        - name: rabbitmq
          image: "rabbitmq:3-management"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5672
              protocol: TCP
          resources:
            {}
---
# Source: adventureworks/charts/referencedata-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-referencedata-api
  labels:
    ufo: dev-referencedata-api-config
    app: referencedata-api
    chart: referencedata-api-0.1.0
    release: dev
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: referencedata-api
      release: dev
  replicas: 1
  template:
    metadata:
      labels:
        app: referencedata-api
        release: dev
    spec:
      containers:
      - name: referencedata-api
        livenessProbe:
          httpGet: 
            port: 80
            path: /referencedata-api/liveness
          initialDelaySeconds: 60
          periodSeconds: 15
        readinessProbe:
          httpGet:
            port: 80
            path: /referencedata-api/hc
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        image: "cradventureworks.azurecr.io/adventureworks_referencedataapi:latest"
        imagePullPolicy: Always
        envFrom:
          - configMapRef: 
              name: dev-referencedata-api-config
          - secretRef:
              name: dev-referencedata-api-secrets
        resources:
          limits:
            memory: "128Mi"
            cpu: "50m"
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
---
# Source: adventureworks/charts/salesorder-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-salesorder-api
  labels:
    ufo: dev-salesorder-api-config
    app: salesorder-api
    chart: salesorder-api-0.1.0
    release: dev
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: salesorder-api
      release: dev
  replicas: 1
  template:
    metadata:
      labels:
        app: salesorder-api
        release: dev
    spec:
      containers:
      - name: salesorder-api
        livenessProbe:
          httpGet: 
            port: 80
            path: /salesorder-api/liveness
          initialDelaySeconds: 60
          periodSeconds: 15
        readinessProbe:
          httpGet:
            port: 80
            path: /salesorder-api/hc
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        image: "cradventureworks.azurecr.io/adventureworks_salesorderapi:latest"
        imagePullPolicy: Always
        envFrom:
          - configMapRef: 
              name: dev-salesorder-api-config
          - secretRef:
              name: dev-salesorder-api-secrets
        resources:
          limits:
            memory: "128Mi"
            cpu: "50m"
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
---
# Source: adventureworks/charts/salesperson-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-salesperson-api
  labels:
    ufo: dev-salesperson-api-config
    app: salesperson-api
    chart: salesperson-api-0.1.0
    release: dev
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: salesperson-api
      release: dev
  replicas: 1
  template:
    metadata:
      labels:
        app: salesperson-api
        release: dev
    spec:
      containers:
      - name: salesperson-api
        livenessProbe:
          httpGet: 
            port: 80
            path: /salesperson-api/liveness
          initialDelaySeconds: 60
          periodSeconds: 15
        readinessProbe:
          httpGet:
            port: 80
            path: /salesperson-api/hc
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        image: "cradventureworks.azurecr.io/adventureworks_salespersonapi:latest"
        imagePullPolicy: Always
        envFrom:
          - configMapRef: 
              name: dev-salesperson-api-config
          - secretRef:
              name: dev-salesperson-api-secrets
        resources:
          limits:
            memory: "128Mi"
            cpu: "50m"
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
---
# Source: adventureworks/charts/ui-web-admin-mvc/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-ui-web-admin-mvc
  labels:
    ufo: dev-ui-web-admin-mvc-config
    app: ui-web-admin-mvc
    chart: ui-web-admin-mvc-0.1.0
    release: dev
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: ui-web-admin-mvc
      release: dev
  replicas: 1
  template:
    metadata:
      labels:
        app: ui-web-admin-mvc
        release: dev
    spec:
      volumes:
      - name: envoy-config
        configMap:
          name: dev-ui-web-admin-mvc-config
          items:
          - key: envoy-config
            path: envoy.yaml
      containers:
      - name: ui-web-admin-mvc
        livenessProbe:
          httpGet: 
            port: 80
            path: /ui-web-admin-mvc/liveness
          initialDelaySeconds: 60
          periodSeconds: 15
        readinessProbe:
          httpGet:
            port: 80
            path: /ui-web-admin-mvc/hc
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        image: "cradventureworks.azurecr.io/adventureworks_web_admin_mvc:latest"
        imagePullPolicy: Always
        envFrom:
          - configMapRef: 
              name: dev-ui-web-admin-mvc-config
        resources:
          limits:
            memory: "128Mi"
            cpu: "50m"
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
      - name: envoy
        image: envoyproxy/envoy:v1.22-latest
        ports:
          - containerPort: 80
        volumeMounts:
          - name: envoy-config
            mountPath: /etc/envoy
            readOnly: true
---
# Source: adventureworks/charts/elasticsearch/templates/coordinating-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dev-elasticsearch-coordinating-only
  labels:
    app.kubernetes.io/name: elasticsearch
    helm.sh/chart: elasticsearch-17.9.3
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: coordinating-only
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: coordinating-only
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/instance: dev
      app.kubernetes.io/component: coordinating-only
  podManagementPolicy: Parallel
  replicas: 1
  serviceName: dev-elasticsearch-coordinating-only
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        helm.sh/chart: elasticsearch-17.9.3
        app.kubernetes.io/instance: dev
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: coordinating-only
        ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
        app: coordinating-only
      annotations:
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          
        nodeAffinity:
          
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
      initContainers:
        ## Image that performs the sysctl operation to modify Kernel settings (needed sometimes to avoid boot errors)
        - name: sysctl
          image: docker.io/bitnami/bitnami-shell:10-debian-10-r338
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
            - -ec
            - |
              CURRENT=`sysctl -n vm.max_map_count`;
              DESIRED="262144";
              if [ "$DESIRED" -gt "$CURRENT" ]; then
                  sysctl -w vm.max_map_count=262144;
              fi;
              CURRENT=`sysctl -n fs.file-max`;
              DESIRED="65536";
              if [ "$DESIRED" -gt "$CURRENT" ]; then
                  sysctl -w fs.file-max=65536;
              fi;
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      containers:
        - name: elasticsearch
          image: docker.io/bitnami/elasticsearch:7.17.0-debian-10-r11
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: "elastic"
            - name: ELASTICSEARCH_CLUSTER_HOSTS
              value: "dev-elasticsearch-master.adventureworks.svc.cluster.local,dev-elasticsearch-coordinating-only.adventureworks.svc.cluster.local,dev-elasticsearch-data.adventureworks.svc.cluster.local,"
            - name: ELASTICSEARCH_TOTAL_NODES
              value: "2"
            - name: ELASTICSEARCH_CLUSTER_MASTER_HOSTS
              value: dev-elasticsearch-master-0 
            - name: ELASTICSEARCH_MINIMUM_MASTER_NODES
              value: "1"
            - name: ELASTICSEARCH_ADVERTISED_HOSTNAME
              value: "$(MY_POD_NAME).dev-elasticsearch-coordinating-only.adventureworks.svc.cluster.local"
            - name: ELASTICSEARCH_HEAP_SIZE
              value: "128m"
            - name: ELASTICSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: ELASTICSEARCH_NODE_TYPE
              value: "coordinating"
          ports:
            - name: http
              containerPort: 9200
            - name: transport
              containerPort: 9300
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - /opt/bitnami/scripts/elasticsearch/healthcheck.sh
          readinessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - /opt/bitnami/scripts/elasticsearch/healthcheck.sh
          resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 256Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/elasticsearch/data
      volumes:
        - name: "data"
          emptyDir: {}
---
# Source: adventureworks/charts/elasticsearch/templates/data-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dev-elasticsearch-data
  labels:
    app.kubernetes.io/name: elasticsearch
    helm.sh/chart: elasticsearch-17.9.3
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: data
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: data
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/instance: dev
      app.kubernetes.io/component: data
  podManagementPolicy: Parallel
  replicas: 1
  serviceName: dev-elasticsearch-data
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        helm.sh/chart: elasticsearch-17.9.3
        app.kubernetes.io/instance: dev
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: data
        ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
        app: data
      annotations:
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          
        nodeAffinity:
          
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
      initContainers:
        ## Image that performs the sysctl operation to modify Kernel settings (needed sometimes to avoid boot errors)
        - name: sysctl
          image: docker.io/bitnami/bitnami-shell:10-debian-10-r338
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
            - -ec
            - |
              CURRENT=`sysctl -n vm.max_map_count`;
              DESIRED="262144";
              if [ "$DESIRED" -gt "$CURRENT" ]; then
                  sysctl -w vm.max_map_count=262144;
              fi;
              CURRENT=`sysctl -n fs.file-max`;
              DESIRED="65536";
              if [ "$DESIRED" -gt "$CURRENT" ]; then
                  sysctl -w fs.file-max=65536;
              fi;
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      containers:
        - name: elasticsearch
          image: docker.io/bitnami/elasticsearch:7.17.0-debian-10-r11
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: "elastic"
            - name: ELASTICSEARCH_CLUSTER_HOSTS
              value: "dev-elasticsearch-master.adventureworks.svc.cluster.local,dev-elasticsearch-coordinating-only.adventureworks.svc.cluster.local,dev-elasticsearch-data.adventureworks.svc.cluster.local,"
            - name: ELASTICSEARCH_TOTAL_NODES
              value: "2"
            - name: ELASTICSEARCH_HEAP_SIZE
              value: "1024m"
            - name: ELASTICSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: ELASTICSEARCH_NODE_TYPE
              value: "data"
            - name: ELASTICSEARCH_ADVERTISED_HOSTNAME
              value: "$(MY_POD_NAME).dev-elasticsearch-data.adventureworks.svc.cluster.local"
          ports:
            - name: http
              containerPort: 9200
            - name: transport
              containerPort: 9300
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - /opt/bitnami/scripts/elasticsearch/healthcheck.sh
          readinessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - /opt/bitnami/scripts/elasticsearch/healthcheck.sh
          resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 512Mi
          volumeMounts:
            - name: "data"
              mountPath: "/bitnami/elasticsearch/data"
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: "data"
      spec:
        accessModes:
          - ReadWriteOnce
        
        
        resources:
          requests:
            storage: "8Gi"
---
# Source: adventureworks/charts/elasticsearch/templates/master-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dev-elasticsearch-master
  labels:
    app.kubernetes.io/name: elasticsearch
    helm.sh/chart: elasticsearch-17.9.3
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: master
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/instance: dev
      app.kubernetes.io/component: master
  podManagementPolicy: Parallel
  replicas: 1
  serviceName: dev-elasticsearch-master
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        helm.sh/chart: elasticsearch-17.9.3
        app.kubernetes.io/instance: dev
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: master
        ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
        app: master
      annotations:
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          
        nodeAffinity:
          
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
      initContainers:
        ## Image that performs the sysctl operation to modify Kernel settings (needed sometimes to avoid boot errors)
        - name: sysctl
          image: docker.io/bitnami/bitnami-shell:10-debian-10-r338
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
            - -ec
            - |
              CURRENT=`sysctl -n vm.max_map_count`;
              DESIRED="262144";
              if [ "$DESIRED" -gt "$CURRENT" ]; then
                  sysctl -w vm.max_map_count=262144;
              fi;
              CURRENT=`sysctl -n fs.file-max`;
              DESIRED="65536";
              if [ "$DESIRED" -gt "$CURRENT" ]; then
                  sysctl -w fs.file-max=65536;
              fi;
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      containers:
        - name: elasticsearch
          image: docker.io/bitnami/elasticsearch:7.17.0-debian-10-r11
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: "elastic"
            - name: ELASTICSEARCH_CLUSTER_HOSTS
              value: "dev-elasticsearch-master.adventureworks.svc.cluster.local,dev-elasticsearch-coordinating-only.adventureworks.svc.cluster.local,dev-elasticsearch-data.adventureworks.svc.cluster.local,"
            - name: ELASTICSEARCH_TOTAL_NODES
              value: "2"
            - name: ELASTICSEARCH_CLUSTER_MASTER_HOSTS
              value: dev-elasticsearch-master-0 
            - name: ELASTICSEARCH_MINIMUM_MASTER_NODES
              value: "1"
            - name: ELASTICSEARCH_ADVERTISED_HOSTNAME
              value: "$(MY_POD_NAME).dev-elasticsearch-master.adventureworks.svc.cluster.local"
            - name: ELASTICSEARCH_HEAP_SIZE
              value: "128m"
            - name: ELASTICSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: ELASTICSEARCH_NODE_TYPE
              value: "master"
          ports:
            - name: http
              containerPort: 9200
            - name: transport
              containerPort: 9300
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - /opt/bitnami/scripts/elasticsearch/healthcheck.sh
          readinessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - /opt/bitnami/scripts/elasticsearch/healthcheck.sh
          resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 512Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/elasticsearch/data
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: "data"
      spec:
        accessModes:
          - ReadWriteOnce
        
        
        resources:
          requests:
            storage: "8Gi"
---
# Source: adventureworks/charts/redis/templates/master/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dev-redis-master
  namespace: "adventureworks"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-15.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: dev
      app.kubernetes.io/component: master
  serviceName: dev-redis-headless
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        helm.sh/chart: redis-15.4.1
        app.kubernetes.io/instance: dev
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: master
      annotations:
        checksum/configmap: a479a1e93ccd06ad254e58b7885c85e33912c2d4290950c11681b33b7ced0116
        checksum/health: 8ac55f9abb6a038fa50b38128c649a1dd5f810836e93ea5211b78fc60a713060
        checksum/scripts: fcbcce21655f485fa43933167418e61e2f31ee25b7aa6ec76283b63507e73d79
        checksum/secret: 4552936f87a9aeb28a77368c15b0de98c9d3dd575a59962248ac0293f12a65ea
    spec:
      
      securityContext:
        fsGroup: 1001
      serviceAccountName: dev-redis
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: redis
                    app.kubernetes.io/instance: dev
                    app.kubernetes.io/component: master
                namespaces:
                  - "adventureworks"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      terminationGracePeriodSeconds: 30
      containers:
        - name: redis
          image: docker.io/bitnami/redis:6.2.6-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - /bin/bash
          args:
            - -c
            - /opt/bitnami/scripts/start-scripts/start-master.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dev-redis
                  key: redis-password
            - name: REDIS_TLS_ENABLED
              value: "no"
            - name: REDIS_PORT
              value: "6379"
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            # One second longer than command timeout should prevent generation of zombie processes.
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local.sh 5
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local.sh 1
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: start-scripts
              mountPath: /opt/bitnami/scripts/start-scripts
            - name: health
              mountPath: /health
            - name: redis-data
              mountPath: /data
              subPath: 
            - name: config
              mountPath: /opt/bitnami/redis/mounted-etc
            - name: redis-tmp-conf
              mountPath: /opt/bitnami/redis/etc/
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: start-scripts
          configMap:
            name: dev-redis-scripts
            defaultMode: 0755
        - name: health
          configMap:
            name: dev-redis-health
            defaultMode: 0755
        - name: config
          configMap:
            name: dev-redis-configuration
        - name: redis-tmp-conf
          emptyDir: {}
        - name: tmp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app.kubernetes.io/name: redis
          app.kubernetes.io/instance: dev
          app.kubernetes.io/component: master
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: adventureworks/charts/redis/templates/replicas/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dev-redis-replicas
  namespace: "adventureworks"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-15.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: replica
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: dev
      app.kubernetes.io/component: replica
  serviceName: dev-redis-headless
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        helm.sh/chart: redis-15.4.1
        app.kubernetes.io/instance: dev
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: replica
      annotations:
        checksum/configmap: a479a1e93ccd06ad254e58b7885c85e33912c2d4290950c11681b33b7ced0116
        checksum/health: 8ac55f9abb6a038fa50b38128c649a1dd5f810836e93ea5211b78fc60a713060
        checksum/scripts: fcbcce21655f485fa43933167418e61e2f31ee25b7aa6ec76283b63507e73d79
        checksum/secret: 4552936f87a9aeb28a77368c15b0de98c9d3dd575a59962248ac0293f12a65ea
    spec:
      
      securityContext:
        fsGroup: 1001
      serviceAccountName: dev-redis
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: redis
                    app.kubernetes.io/instance: dev
                    app.kubernetes.io/component: replica
                namespaces:
                  - "adventureworks"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      terminationGracePeriodSeconds: 30
      containers:
        - name: redis
          image: docker.io/bitnami/redis:6.2.6-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - /bin/bash
          args:
            - -c
            - /opt/bitnami/scripts/start-scripts/start-replica.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: REDIS_REPLICATION_MODE
              value: slave
            - name: REDIS_MASTER_HOST
              value: dev-redis-master-0.dev-redis-headless.adventureworks.svc.cluster.local
            - name: REDIS_MASTER_PORT_NUMBER
              value: "6379"
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dev-redis
                  key: redis-password
            - name: REDIS_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dev-redis
                  key: redis-password
            - name: REDIS_TLS_ENABLED
              value: "no"
            - name: REDIS_PORT
              value: "6379"
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local_and_master.sh 5
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local_and_master.sh 1
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: start-scripts
              mountPath: /opt/bitnami/scripts/start-scripts
            - name: health
              mountPath: /health
            - name: redis-data
              mountPath: /data
              subPath: 
            - name: config
              mountPath: /opt/bitnami/redis/mounted-etc
            - name: redis-tmp-conf
              mountPath: /opt/bitnami/redis/etc
      volumes:
        - name: start-scripts
          configMap:
            name: dev-redis-scripts
            defaultMode: 0755
        - name: health
          configMap:
            name: dev-redis-health
            defaultMode: 0755
        - name: config
          configMap:
            name: dev-redis-configuration
        - name: redis-tmp-conf
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app.kubernetes.io/name: redis
          app.kubernetes.io/instance: dev
          app.kubernetes.io/component: replica
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: adventureworks/charts/elasticsearch/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-elasticsearch
  namespace: adventureworks
  labels:
    app.kubernetes.io/name: elasticsearch
    helm.sh/chart: elasticsearch-17.9.3
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: dev-elasticsearch-master
                port:
                  name: http
      host: dev.elasticsearch.adventureworks-vnext.com
  tls:
    - hosts:
        - dev.elasticsearch.adventureworks-vnext.com
      secretName: dev.elasticsearch.adventureworks-vnext.com-tls
---
# Source: adventureworks/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-adventureworks-ingress
  labels:
    app: adventureworks
    chart: adventureworks-0.1.0
    release: dev
    heritage: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/rewrite-target: /$1
    # nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
spec:
  tls:  
    - hosts:
      - dev.adventureworks-vnext.com
      secretName: tls-secret
  rules:
    - host: dev.adventureworks-vnext.com
      http:
        paths:
          - pathType: Prefix
            path: /basket-api/
            backend:
              service:
                name: dev-basket-api
                port:
                  number: 80
          - pathType: Prefix
            path: /customer-api/
            backend:
              service:
                name: dev-customer-api
                port:
                  number: 80
          - pathType: Prefix
            path: /identityserver/
            backend:
              service:
                name: dev-identityserver
                port:
                  number: 80
          - pathType: Prefix
            path: /product-api/
            backend:
              service:
                name: dev-product-api
                port:
                  number: 80
          - pathType: Prefix
            path: /referencedata-api/
            backend:
              service:
                name: dev-referencedata-api
                port:
                  number: 80
          - pathType: Prefix
            path: /salesorder-api/
            backend:
              service:
                name: dev-salesorder-api
                port:
                  number: 80
          - pathType: Prefix
            path: /salesperson-api/
            backend:
              service:
                name: dev-salesperson-api
                port:
                  number: 80
          - pathType: Prefix
            path: /ui-web-admin-mvc/
            backend:
              service:
                name: dev-ui-web-admin-mvc
                port:
                  number: 80
          - pathType: Prefix
            path: /mvc-store/
            backend:
              service:
                name: dev-mvc-store
                port:
                  number: 80
          - pathType: Prefix
            path: /
            backend:
              service:
                name: dev-kibana
                port:
                  number: 5601

