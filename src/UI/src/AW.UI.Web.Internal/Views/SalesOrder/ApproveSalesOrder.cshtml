@{
    ViewData["Title"] = $"Approve sales order { Model.SalesOrderNumber }";
    var territories = ViewData["territories"] as List<SelectListItem>;
    var salesPersons = ViewData["salesPersons"] as List<SelectListItem>;
    @model ApproveSalesOrderViewModel;

}

<div class="container-xl">
    <nav class="navbar navbar-light bg-light mb-3">
        <div class="container-fluid">
            <a asp-action="Detail" asp-route-salesOrderNumber="@Model.SalesOrderNumber" class="btn btn-primary"><i class="fa fa-arrow-left"></i> Go back</a>
        </div>
    </nav>
    @using (Html.BeginForm(FormMethod.Post))
    {
        <div class="row mb-3">
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.SalesOrderNumber, new { @class = "control-label" })
                    @Html.EditorFor(m => m.SalesOrderNumber, new { htmlAttributes = new { disabled = "disabled", @class = "form-control"}})
                    @Html.HiddenFor(m => m.SalesOrderNumber)
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.OrderDate, new { @class = "control-label" })
                    @Html.EditorFor(m => m.OrderDate, new { htmlAttributes = new { disabled = "disabled", @class = "form-control"}})
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.DueDate, new { @class = "control-label" })
                    @Html.EditorFor(m => m.DueDate, new { htmlAttributes = new { disabled = "disabled", @class = "form-control"}})
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.CustomerName, new { @class = "control-label" })
                    @Html.EditorFor(m => m.CustomerName, new { htmlAttributes = new { disabled = "disabled", @class = "form-control"}})
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.CustomerType, new { @class = "control-label" })
                    @Html.EditorFor(m => m.CustomerType, new { htmlAttributes = new { disabled = "disabled", @class = "form-control"}})
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.OnlineOrdered, new { @class = "control-label" })
                    @Html.EditorFor(m => m.OnlineOrdered, new { htmlAttributes = new { disabled = "disabled", @class = "form-control"}})
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.ShipMethod, new { @class = "control-label" })
                    @Html.EditorFor(m => m.ShipMethod, new { htmlAttributes = new { disabled = "disabled", @class = "form-control"}})
                    <span asp-validation-for="ShipMethod" class="text-danger"></span>
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.Territory, new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.Territory, territories, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Territory, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.SalesPerson, new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.SalesPerson, salesPersons, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.SalesPerson, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row amounts">
            <div class="col-4">
                <div class="row mb-3">
                    <div class="col">
                        @Html.LabelFor(m => m.SubTotal)
                    </div>
                    <div class="col">
                        @Html.EditorFor(m => m.SubTotal, new { htmlAttributes = new { disabled = "disabled", @class = "form-control"}})
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col">
                        @Html.LabelFor(m => m.TaxAmt)
                    </div>
                    <div class="col">
                        @Html.EditorFor(m => m.TaxAmt, new { htmlAttributes = new { disabled = "disabled", @class = "form-control"}})
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col">
                        @Html.LabelFor(m => m.Freight)
                    </div>
                    <div class="col">
                        @Html.EditorFor(m => m.Freight, new { htmlAttributes = new { disabled = "disabled", @class = "form-control"}})
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col">
                        <hr />
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col">
                        @Html.LabelFor(m => m.TotalDue)
                    </div>
                    <div class="col">
                        @Html.EditorFor(m => m.TotalDue, new { htmlAttributes = new { disabled = "disabled", @class = "form-control"}})
                    </div>
                </div>
            </div>
        </div>
        <div class="text-center">
            <button type="submit" class="btn btn-success"><i class="fa fa-check"></i> Approve sales order</button>
        </div>
    }
</div>

@section scripts
{
    <script>
        $(document).ready(function () {

            //var territory = document.getElementById('Territory');

            //getSalesPersons(territory, $('#SalesPerson'), "@Url.Action("GetSalesPersons", new { territory = "js-territory" })"
            //    .replace("js-territory", territory.value)
            //);

            $('#Territory').change(function () {
                var dropdown = $('#SalesPerson');
                
                if (this.value == "--Select--") {
                    dropdown.empty();
                    dropdown.prop('disabled', true);
                }
                else {
                    dropdown.prop('disabled', false);
                    getSalesPersons(this.value, dropdown, "@Url.Action("GetSalesPersons", new { territory = "js-territory" })"
                        .replace("js-territory", this.value)
                    );
                }
            });
        });
    </script>
}