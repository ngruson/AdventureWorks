@model AW.UI.Web.Admin.Mvc.ViewModels.SalesOrder.SalesOrderViewModel
@{
    var salesPersons = ViewData["salesPersons"] as IEnumerable<SelectListItem>;
    var shipMethods = ViewData["shipMethods"] as IEnumerable<SelectListItem>;
    var territories = ViewData["territories"] as IEnumerable<SelectListItem>;
}

<!-- Modal -->
<div class="modal fade" id="editOrderInfo" tabindex="-1" role="dialog" aria-labelledby="editOrderInfoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editOrderInfoModalLabel">Edit Order Info</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("UpdateOrderInfo", "SalesOrder"))
                {
                    @Html.HiddenFor(_ => _.SalesOrderNumber)

                    <div class="row mb-4">
                        @Html.LabelFor(m => m.RevisionNumber, new { @class = "col-sm-6 col-form-label form-label" })
                        <div class="col-sm-6">
                            @Html.EditorFor(m => m.RevisionNumber, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.OnlineOrderFlag, new { @class = "col-sm-6 col-form-label form-label" })
                        <div class="col-sm-6">
                            @Html.CheckBoxFor(m => m.OnlineOrderFlag, new { @class = "form-check-input" })
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.DueDate, new { @class = "col-sm-6 col-form-label form-label" })
                        <div class="col-sm-6">
                            <input type="text" id="SalesOrder.DueDate" name="SalesOrder.DueDate" class="js-flatpickr form-control flatpickr-custom" placeholder="Select due date" value="@Model.DueDate"
                               data-hs-flatpickr-options='{
                                 "dateFormat": "d/m/Y"
                               }'>
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.ShipDate, new { @class = "col-sm-6 col-form-label form-label" })
                        <div class="col-sm-6">
                            <input type="text" class="js-flatpickr form-control flatpickr-custom" placeholder="Select ship date" value="@Model.ShipDate"
                               data-hs-flatpickr-options='{
                             "dateFormat": "d/m/Y"
                               }'>
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.PurchaseOrderNumber, new { @class = "col-sm-6 col-form-label form-label" })
                        <div class="col-sm-6">
                            <input type="text" class="form-control" value="@Model.PurchaseOrderNumber" />
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.AccountNumber, new { @class = "col-sm-6 col-form-label form-label" })
                        <div class="col-sm-6">
                            <input type="text" class="form-control" value="@Model.AccountNumber" />
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.ShipMethod, new { @class = "col-sm-6 col-form-label form-label" })
                        <div class="col-sm-6 tom-select-custom">
                            @Html.DropDownListFor(m => m.ShipMethod, shipMethods, null, new { @class = "js-select form-select", data_hs_tom_select_options = "{ 'searchInDropdown': false, 'hideSearch': true }" })
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.Territory, new { @class = "col-sm-6 col-form-label form-label" })
                        <div class="col-sm-6 tom-select-custom">
                            @Html.DropDownListFor(m => m.Territory, territories, null, new { @class = "js-select form-select", data_hs_tom_select_options = "{ 'searchInDropdown': false, 'hideSearch': true }" })
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.SalesPerson, new { @class = "col-sm-6 col-form-label form-label" })
                        <div class="col-sm-6 tom-select-custom">
                            @Html.DropDownListFor(m => m.SalesPerson, salesPersons, null, new { @class = "js-select form-select", data_hs_tom_select_options = "{ 'searchInDropdown': false, 'hideSearch': true }" })
                        </div>
                    </div>

                    <div class="d-flex justify-content-end gap-sm-3">
                        <button type="button" class="btn btn-white me-2 me-sm-0" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Update Order Info</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!-- End Modal -->