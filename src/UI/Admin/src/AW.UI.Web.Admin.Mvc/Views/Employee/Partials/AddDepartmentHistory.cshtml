@using AW.UI.Web.Admin.Mvc.Controllers;
@model AW.UI.Web.Admin.Mvc.ViewModels.Employee.AddDepartmentHistoryViewModel
@{
    var departments = ViewData[EmployeeController.DEPARTMENTS] as IEnumerable<SelectListItem>;
    var shifts = ViewData[EmployeeController.SHIFTS] as IEnumerable<SelectListItem>;
}

<!-- Modal -->
<div class="modal fade" id="addDepartmentHistory" tabindex="-1" role="dialog" aria-labelledby="addDepartmentHistoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addDepartmentHistoryModalLabel">Add Department History</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("AddDepartmentHistory", "Employee"))
                {
                    <input name="LoginID" type="hidden" value="@Model.LoginID">

                    <div class="row mb-4">
                        @Html.LabelFor(m => m.DepartmentName, new { @class = "col-sm-4 col-form-label form-label" })
                        <div class="col-sm-8 tom-select-custom">
                            <select asp-for="DepartmentName" asp-items="departments" name="DepartmentName" class="js-select form-select" placeholder="Select a department"></select>
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.ShiftName, new { @class = "col-sm-4 col-form-label form-label" })
                        <div class="col-sm-8 tom-select-custom">
                            <select asp-for="ShiftName" asp-items="shifts" name="ShiftName" class="js-select form-select" placeholder="Select a shift"></select>
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.StartDate, new { @class = "col-sm-4 col-form-label form-label" })
                        <div class="col-sm-8">
                            <input type="text" id="StartDate" name="StartDate" class="js-flatpickr form-control flatpickr-custom" placeholder="Select start date" value="@Model.StartDate.ToShortDateString()"
                                   data-hs-flatpickr-options='{ "dateFormat": "m/d/Y" }'>
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.EndDate, new { @class = "col-sm-4 col-form-label form-label" })
                        <div class="col-sm-8">
                            <input type="text" id="EndDate" name="EndDate" class="js-flatpickr form-control flatpickr-custom" placeholder="Select end date" value="@Model.EndDate?.ToShortDateString()"
                                   data-hs-flatpickr-options='{ "dateFormat": "m/d/Y" }'>
                        </div>
                    </div>

                    <div class="d-flex justify-content-end gap-sm-3">
                        <button type="button" class="btn btn-white me-2 me-sm-0" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Add Department History</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>