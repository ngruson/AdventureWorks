@using AW.UI.Web.Admin.Mvc.ViewModels.Customer;
@{
    @model CustomerAddressViewModel;
    var addressType = Model.AddressType!.Replace(" ", "-");
    var accountNumber = ViewData["accountNumber"] as string;

    var addressTypes = ViewData["addressTypes"] as IEnumerable<SelectListItem>;
    var countries = ViewData["countries"] as IEnumerable<SelectListItem>;
    var statesProvinces = ViewData["statesProvinces"] as IEnumerable<SelectListItem>;
}

<!-- Modal -->
<div class="modal fade" id="editAddressModal-@addressType" tabindex="-1" role="dialog" aria-labelledby="editAddressModalLabel-@addressType" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAddressModalLabel-@addressType">Edit Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("UpdateAddress", "Customer"))
                {
                    <input type="hidden" name="accountNumber" value="@accountNumber" />
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.AddressType, new { @class = "col-sm-3 col-form-label form-label" })
                        <div class="col-sm-9 tom-select-custom">
                            <select asp-for="AddressType" asp-items="addressTypes" name="addressType" class="js-select form-select"></select>
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.Address.AddressLine1, new { @class = "col-sm-3 col-form-label form-label" })
                        <div class="col-sm-9">
                            <input asp-for="@Model.Address.AddressLine1" name="address.AddressLine1" class="form-control" />
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.Address.AddressLine2, new { @class = "col-sm-3 col-form-label form-label" })
                        <div class="col-sm-9">
                            <input asp-for="@Model.Address.AddressLine2" name="address.AddressLine2" class="form-control" />
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.Address.PostalCode, new { @class = "col-sm-3 col-form-label form-label" })
                        <div class="col-sm-9">
                            <input asp-for="@Model.Address.PostalCode" name="address.PostalCode" class="form-control" />
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.Address.City, new { @class = "col-sm-3 col-form-label form-label" })
                        <div class="col-sm-9">
                            <input asp-for="@Model.Address.City" name="address.City" class="form-control" />
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.Address.CountryRegionCode, new { @class = "col-sm-3 col-form-label form-label" })
                        <div class="col-sm-9 tom-select-custom">
                            <select asp-for="Address.CountryRegionCode" asp-items="countries" name="address.CountryRegionCode" data-addresstype="@addressType" class="js-select js-select-country form-select"></select>
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.Address.StateProvinceCode, new { @class = "col-sm-3 col-form-label form-label" })
                        <div class="col-sm-9 tom-select-custom">
                            <select asp-for="Address.StateProvinceCode" asp-items="statesProvinces" name="address.StateProvinceCode" class="js-select js-select-stateprovince-@addressType form-select"></select>
                        </div>
                    </div>
                    <div class="d-flex justify-content-end gap-sm-3">
                        <button type="button" class="btn btn-white me-2 me-sm-0" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!-- End Modal -->

@section Scripts {
    <script>
        $(document).on('ready', function () {
            $('.js-select-country').change(function (e) {
                    alert('test');
                    var addressType = this.getAttribute('data-addresstype');
                    alert(addressType);
                    alert(this.value);
                    var dropdown = $('.js-select-stateprovince-' + addressType);

                    if (this.value == "--Select--") {
                        dropdown.empty();
                        dropdown.prop('disabled', true);
                    }
                    else {
                        dropdown.prop('disabled', false);
                        getStatesProvinces(this.value, dropdown, "@Url.Action("GetStatesProvinces", new { country = "js-country" })"
                        .replace("js-country", this.value)
                    );
                }
            });
        });
    </script>
}