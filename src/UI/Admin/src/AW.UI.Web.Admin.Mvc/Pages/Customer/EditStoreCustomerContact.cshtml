@using AW.UI.Web.Admin.Mvc.Pages.Customer;
@model StoreCustomerContactModel
@{
    var customerId = ViewData["customerId"];
    var customerName = ViewData["customerName"];
}

<!-- Modal -->
<div class="modal fade" id="edit-store-customer-contact" tabindex="-1" role="dialog" aria-labelledby="edit-store-customer-contact-modal-label" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="edit-store-customer-contact-modal-label">Edit Contact Information</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(_ => customerId)
                    @Html.HiddenFor(_ => customerName)
                    @Html.HiddenFor(_ => _.CustomerContact!.ObjectId)

                    <div class="row mb-4">
                        @Html.LabelFor(m => m.CustomerContact!.ContactPerson.Title, new { @class = "col-sm-3 col-form-label form-label" })
                        <div class="col-sm-9">
                            @Html.EditorFor(m => m.CustomerContact!.ContactPerson.Title, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.CustomerContact!.ContactPerson.Name!.FirstName, new { @class = "col-sm-3 col-form-label form-label" })
                        <div class="col-sm-9">
                            @Html.EditorFor(m => m.CustomerContact!.ContactPerson.Name!.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.CustomerContact!.ContactPerson.Name!.MiddleName, new { @class = "col-sm-3 col-form-label form-label" })
                        <div class="col-sm-9">
                            @Html.EditorFor(m => m.CustomerContact!.ContactPerson.Name!.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.CustomerContact!.ContactPerson.Name!.LastName, new { @class = "col-sm-3 col-form-label form-label" })
                        <div class="col-sm-9">
                            @Html.EditorFor(m => m.CustomerContact!.ContactPerson.Name!.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.CustomerContact!.ContactPerson.Suffix, new { @class = "col-sm-3 col-form-label form-label" })
                        <div class="col-sm-9">
                            @Html.EditorFor(m => m.CustomerContact!.ContactPerson.Suffix, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <!-- Add Email Input Field -->
                    <div id="addEmailFieldTemplate" style="display: none;">
                        <div class="input-group-add-field">
                            <input type="email" class="form-control" data-name="email" placeholder="Enter email" aria-label="Enter email">
                        </div>

                        <a class="js-delete-field input-group-add-field-delete" href="javascript:;">
                            <i class="bi-x-lg"></i>
                        </a>
                    </div>
                    <!-- End Email Input Field -->
                    <div class="js-add-field row mb-4"
                         data-hs-add-field-options='{
                            "template": "#addEmailFieldTemplate",
                            "container": "#addEmailFieldContainer",
                            "defaultCreated": 0
                         }'>
                        <label class="col-sm-3 col-form-label form-label">
                            Email
                        </label>
                        <div class="col-sm-9">
                            @for (int i = 0; i < Model.CustomerContact?.ContactPerson.EmailAddresses.Count; i++)
                            {
                                <div class="row mb-2">
                                    <div class="col">
                                        <input asp-for="CustomerContact!.ContactPerson.EmailAddresses[i].EmailAddress" class="form-control" readonly />
                                    </div>
                                    <div class="col">
                                        @*<form method="post" asp-page-handler="deleteContactEmailAddress" asp-route-customerid="@customerId" asp-route-contactid="Model.CustomerContact?.ObjectId" asp-route-objectid="@Model.CustomerContact.ContactPerson.EmailAddresses[i].ObjectId">*@
                                            <button @*type="submit"*@ class="btn btn-white">
                                                <i class="bi-trash"></i>
                                            </button>
                                        @*</form>*@
                                    </div>
                                </div>
                                @if (i == Model.CustomerContact.ContactPerson.EmailAddresses.Count - 1)
                                {
                                    <div id="addEmailFieldContainer"></div>
                                    <a href="javascript:;" class="js-create-field form-link">
                                        <i class="bi-plus-circle me-1"></i> Add email address
                                    </a>
                                }
                            }
                        </div>
                    </div>
                    <!-- Add Phone Input Field -->
                    <div id="addPhoneFieldTemplate" class="input-group-add-field" style="display: none;">
                        <div class="input-group input-group-sm-vertical align-items-center">
                            <input class="form-control" data-name="phone" placeholder="Enter phone number" aria-label="Enter phone number">

                            <div class="input-group-append">
                                <!-- Select -->
                                <div class="tom-select-custom tom-select-custom-end">
                                    <select class="js-select-dynamic form-select" autocomplete="off" name="phoneSelect" data-name="phoneSelect"
                                            data-hs-tom-select-options='{
                                                "searchInDropdown": false,
                                                "hideSearch": true,
                                                "dropdownWidth": "8rem"
                                                }'>
                                        @foreach (var phoneNumberType in Model.PhoneNumberTypes!)
                                        {
                                            if (phoneNumberType?.Value == "Work")
                                            {
                                                <option value="@phoneNumberType?.Value" selected>@phoneNumberType?.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@phoneNumberType?.Value">@phoneNumberType?.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <!-- End Select -->
                            </div>
                        </div>
                        <a class="js-delete-field input-group-add-field-delete" href="javascript:;">
                            <i class="bi-x-lg"></i>
                        </a>
                    </div>
                    <!-- End Phone Input Field -->
                    <div class="js-add-field row mb-4"
                        data-hs-add-field-options='{
                        "template": "#addPhoneFieldTemplate",
                        "container": "#addPhoneFieldContainer",
                        "defaultCreated": 0
                        }'>
                        <label class="col-sm-3 col-form-label form-label">
                            Phone
                        </label>
                        <div class="col-sm-9">
                            @for (int i = 0; i < Model.CustomerContact?.ContactPerson.PhoneNumbers.Count; i++)
                            {
                                <div class="row mb-2">
                                    <div class="col">
                                        <input asp-for="CustomerContact!.ContactPerson.PhoneNumbers[i].PhoneNumber" class="form-control" readonly />
                                    </div>
                                    <div class="col">
                                        <input asp-for="CustomerContact!.ContactPerson.PhoneNumbers[i].PhoneNumberType" class="form-control" readonly />
                                    </div>
                                </div>
                            }
                            <div id="addPhoneFieldContainer"></div>
                            <a href="javascript:;" class="js-create-field form-link">
                                <i class="bi-plus-circle me-1"></i> Add phone number
                            </a>
                        </div>
                    </div>
                    <div class="row mb-4">
                        @Html.LabelFor(m => m.CustomerContact!.ContactType, new { @class = "col-sm-3 col-form-label form-label" })
                        <div class="col-sm-9">
                            @Html.EditorFor(m => m.CustomerContact!.ContactType, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="d-flex justify-content-end gap-sm-3">
                        <button type="button" class="btn btn-white me-2 me-sm-0" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- End Modal -->