@{
    ViewData["Title"] = "Product Catalog";
    @model ProductsViewModel

    var pageSizeList = ViewData["pageSizeList"] as List<SelectListItem>;
}

@using (Html.BeginForm("Index", "Product", FormMethod.Get))
{
    @Html.HiddenFor(m => m.ProductCategory)
    @Html.HiddenFor(m => m.ProductSubcategory)

    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">@Html.ActionLink("Home", "Index", "Home")</li>
            @if (!string.IsNullOrEmpty(Model.ProductSubcategory))
            {
                <li class="breadcrumb-item">@Html.ActionLink(Model.ProductCategory, "Index", new { productCategory = Model.ProductCategory })</li>
                <li class="breadcrumb-item active" aria-current="page">@Model.ProductSubcategory</li>
            }
            else
            {
                <li class="breadcrumb-item active" aria-current="page">@Model.ProductCategory</li>
            }
        </ol>
    </nav>

    <div class="main_padding product_wrapper_sec product_wrapper">
        <div id="product-category" class="container">
            <div id="content">
                <h3>@Model.ProductSubcategory</h3>
                <div class="row">
                    <div class="form-group mb-2 col">
                        <label for="input-sort">Sort By:</label>
                        <select id="input-sort" class="form-control mb-2" onchange="this.form.submit();">
                            <option value="#" selected="selected">Default</option>
                            <option value="#">Name (A - Z)</option>
                            <option value="#">Name (Z - A)</option>
                            <option value="#">Price (Low &gt; High)</option>
                            <option value="#">Price (High &gt; Low)</option>
                            <option value="#">Rating (Highest)</option>
                            <option value="#">Rating (Lowest)</option>
                            <option value="#">Model (A - Z)</option>
                            <option value="#">Model (Z - A)</option>
                        </select>
                    </div>
                    <div class="form-group mb-2 col">
                        @Html.LabelFor(m => m.PageSize, "Show:")
                        @Html.DropDownListFor(m => m.PageSize, pageSizeList, new { @class = "form-control", onchange = "this.form.submit();" })
                    </div>
                    <div class="col-2 offset-3">
                        <div class="btn-group">
                            <button type="button" id="grid-view" class="btn btn-default active" data-toggle="tooltip" title="" data-original-title="Grid"><i class="fa fa-th-large"></i></button>
                            <button type="button" id="list-view" class="btn btn-default" data-toggle="tooltip" title="" data-original-title="List"><i class="fa fa-list-ul"></i></button>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="w-50 mx-auto">
                        <partial name="_pagination" for="@Model.PaginationInfo" />
                    </div>
                </div>
                <div class="row">
                    @foreach (var product in Model.Products!)
                    {
                        <partial name="_product" model="product" />
                    }
                </div>
                <div class="row">
                    <div class="w-50 mx-auto">
                        <partial name="_pagination" for="@Model.PaginationInfo" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}