# ASP.NET

# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'ngruson'
    scannerMode: 'MSBuild'
    projectKey: 'sonar-adventureworks'
    projectName: 'sonar-adventureworks'

- task: VSBuild@1
  displayName: 'Build'
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: 'test'
    projects: |
      **/AW.Application.UnitTests.csproj
      **/AW.Domain.UnitTests.csproj
      **/AW.Persistence.EntityFramework.UnitTests
      **/AW.Persistence.EntityFrameworkCore.UnitTests
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat="cobertura%2copencover"'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      dotnet tool install --global coverlet.console
      $unitTestFile = gci -Recurse | ?{ $_.FullName -like "*bin\AW.CustomerService.UnitTests.dll" }
      coverlet $($unitTestFile.FullName) --target "dotnet" --targetargs "vstest $($unitTestFile.FullName)" --format "cobertura"

- script: 'dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.5.8'  
  displayName: 'Install ReportGenerator tool'

- script: 'reportgenerator -reports:$(Build.SourcesDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"'  
  displayName: 'Create reports'

- task: PublishCodeCoverageResults@1  
  displayName: 'Publish code coverage'  
  inputs:  
    codeCoverageTool: Cobertura  
    summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Get-ChildItem -Recurse -Filter "*.coverage" | % {  
      $outfile = "$([System.IO.Path]::GetFileNameWithoutExtension($_.FullName)).coveragexml"  
      $output = [System.IO.Path]::Combine([System.IO.Path]::GetDirectoryName($_.FullName), $outfile)  
      "Analyse '$($_.Name)' with output '$outfile'..."  
      . $env:USERPROFILE\.nuget\packages\microsoft.codecoverage\16.8.0\build  
      etstandard1.0\CodeCoverage\CodeCoverage.exe analyze /output:$output $_.FullName  
      }  
      "Done"
    workingDirectory: '$(Agent.TempDirectory)'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'